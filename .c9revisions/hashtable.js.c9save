{"ts":1381787843564,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1381787845955,"patch":[[{"diffs":[[1,"/* Simple hashtable manager, dont use it for PRODUCTION!!! */\nvar crypto = require(\"crypto\");\n\nvar hashes = [];\n\nmodule.exports = {\n    \n    set: function _set(key, data) {\n        hashes[key] = data;\n        return;\n    },\n    \n    add: function _add(key, data) {\n        if(! hashes[key]) {\n            hashes[key] = [];\n        }\n        \n        hashes[key].push(data);\n        return;\n    },\n    \n    get: function _get(key) {\n        return hashes[key];\n    },\n    \n    update: function _update(key, data) {\n        for(var i in data) {\n               hashes[key][i] = data[i];\n        }\n        return;\n    },\n    \n    delete: function _delete(key) {\n        hashes[key] = null;\n        return;\n    },\n    \n    clear: function _clear() {\n        for(var key in hashes) {\n            hashes[key] = null;\n        }\n        return;\n    },\n    \n    createKey: function createKey(data) {\n        var timestamp = new Date().getTime();\n        var random = Math.random();\n        var secret = timestamp + random;\n        var string = JSON.stringify(data) + secret;\n        \n        return crypto.createHash('sha256').update(string).digest('base64');\n    },\n    \n    createHash: function createHash(data) {\n        var string = JSON.stringify(data);\n        \n        return crypto.createHash('sha256').update(string).digest('base64');\n    },\n    \n    indexes: function indexes() {\n        var keys = [];\n        \n        for(var i in hashes) {\n            keys.push(i);\n        }\n        \n        return keys;\n    }\n    \n}"]],"start1":0,"start2":0,"length1":0,"length2":1521}]],"length":1521,"saved":false}
